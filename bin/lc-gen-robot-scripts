#!/usr/bin/env ruby
require 'fileutils'

console_text=<<-EOF
#!/usr/bin/env ruby
# To start an irb session with gems and configuration loaded:
# robot_root$ ./bin/console development

unless(ARGV.first.nil?)
  ENV['ROBOT_ENVIRONMENT'] = ARGV.first
end

require File.expand_path(File.dirname(__FILE__) + '/../config/boot')
require 'irb'

IRB.start

EOF

run_robot_text =<<-EOF
#!/usr/bin/env ruby
# Will run one robot as specified 
# Should be run from the root of the robot project
# Assumes there's a ROBOT_ROOT/.rvmrc file that will load the correct ruby version and gemset, if necessary
# robot_root$ ROBOT_ENVIRONMENT=test ./bin/run_robot start accessionWF:publish
# 
# To run once With Options
# Options must be placed AFTER workflow and robot name
# robot_root$ ROBOT_ENVIRONMENT=test ./bin/run_robot run accessionWF:shelve -d druid:aa12bb1234

require File.expand_path(File.dirname(__FILE__) + '/../config/boot')
require 'lyber_core/robots/runner'

# sleep_time = Dor::Config.accessioning_robot_sleep_time || 900
runner = LyberCore::Robots::Runner.new()  # optionally pass in sleep_time if you want a set it differently
runner.run
EOF

puts "Creating...\n  bin"
FileUtils.mkdir_p 'bin'

console_path = 'bin/console'
puts "  #{console_path}"
File.open(console_path, 'w') {|f| f << console_text }
FileUtils.chmod 0755, console_path

run_robot_path = 'bin/run_robot'
puts "  #{run_robot_path}"
File.open(run_robot_path, 'w') {|f| f << run_robot_text }
FileUtils.chmod 0755, run_robot_path
